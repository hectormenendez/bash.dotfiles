# If running non-interactively, don't do anything.
[[ $- != *i* ]] && return

# Determine the location of this file regardless its type.
_path=`readlink -n ${BASH_SOURCE[0]}`
[ -z $_path ] && _path=${BASH_SOURCE[0]}
_path=`dirname $_path`

# Include utilities
source $_path/../lib/utils.sh

# ---------------------------------------------------------------------------- ENVIRONMENT

export LC_ALL=en_US.UTF-8
export LANG=$LC_ALL
export PS1='\[\033[01;30m\]\u@\h \[\033[01;34m\]\w\[\033[00m\]\n\$ '
export PATH=$DOTFILES_BIN:/usr/local/bin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin
export NVM_DIR=$HOME/.nvm

export FZF_TMUX=0                                # don't use a split in tmyx for FZF
export FZF_DEFAULT_COMMAND='ag -g ""'            # make FZF parse .gitignore .hgignore and svn:ignore
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND" # Same as above but for CtrlT

# remove history duplicates (ignoring spacing)
export HISTCONTROL=erasedups:ignorespace
export PROMPT_COMMAND="history -n; history -w; history -c; history -r; $PROMPT_COMMAND"

# Setup private environment variables
_keys=(GIT_AUTHOR_NAME GIT_AUTHOR_EMAIL HOMEBREW_GITHUB_API_TOKEN)
for _key in ${_keys[@]}; do
    if [[ ! -f $DOTFILES_ENV/$_key ]]; then
        echo "$_key :"
        read _val
        echo $_val > $DOTFILES_ENV/$_key
    fi
    setEnv "$_key"
done
export GIT_COMMITTER_NAME="$GIT_AUTHOR_NAME"    # Alias for git
export GIT_COMMITTER_EMAIL="$GIT_AUTHOR_EMAIL"  # Alias for git

[ -r "$DOTFILES_LIB/gitprompt.sh" ] && source "$DOTFILES_LIB/gitprompt.sh"

# Mac OS dependenciesÂ·
if isDarwin; then
    [[ -z `which brew` ]] && echo "Brew missing." && return
    [[ -z `brew ls --versions coreutils` ]] && "CoreUtils missing." && return

    export PATH=$(brew --prefix coreutils)/libexec/gnubin:$PATH
    export MANPATH=$(brew --prefix coreutils)/libexec/gnuman:$MANPATH

    [[ -z `brew ls --versions binutils` ]] && echo "BinUtils missing." && return
    [[ -z `brew ls --versions findutils` ]] && echo "FindUtils missing." && return

    [ -f $(brew --prefix)/etc/bash_completion ] && source $(brew --prefix)/etc/bash_completion
    [ -s "$(brew --prefix nvm)/nvm.sh" ] && source "$(brew --prefix nvm)/nvm.sh"

    if [ ! -z "$(brew --prefix fzf)" ]; then
        # Enable Fuzzy Search
        source "$(brew --prefix fzf)/shell/completion.bash" 2> /dev/null
        source "$(brew --prefix fzf)/shell/key-bindings.bash"
    fi

    # Enable iterm2's shell integration
    test -e "$HOME/.iterm2_shell_integration.bash" && . "$HOME/.iterm2_shell_integration.bash"

    # Enables gruvbox's color palette to exactly match theme colors
    source ~/.vim/bundle/gruvbox/gruvbox_256palette_osx.sh
fi

# ------------------------------------------------------------------------------ BEHAVIOUR

shopt -s checkwinsize                                        # check winsize after each command and adjust screen automatically,
shopt -s nocaseglob                                          # case insensitive globbing
shopt -s cdspell                                             # Autocorrect typos in path names when using cd
shopt -s histappend                                          # don't overwrite history on login, append to it.
set -o vi                                                    # Enable vi mode
umask 022                                                    # Set the creation mask, so files created with 660 and dirs as 770

eval `dircolors $HOME/.dir_colors`                           # colorize files by type
[ -f $HOME/.alias ] && source $HOME/.alias                   # if an alias file exist, load it.
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)" # enable lesspipe

# ---------------------------------------------------------------------------------- TASKS


# cleanup the history file, by manually removing dups
tac $HISTFILE | awk '!x[$0]++' | tac | sponge $HISTFILE

# Add tab completions for SSH hostnames based on $HOME/.ssh/config
[ -e "$HOME/.ssh/config" ] && complete -o "default" -o "nospace" -W "$(grep "^Host" $HOME/.ssh/config | grep -v "[?*]" | cut -d " " -f2- | tr ' ' '\n')" scp sftp ssh;


# -------------------------------------------------------------------------------- CLEANUP


# forces internal script to resource utils
unset DOTFILES_UTILS

# remove internals
unset _self
unset _path
